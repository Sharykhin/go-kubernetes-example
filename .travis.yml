sudo: required
language: go
os: linux
branches:
  only:
  - master
go:
  - 1.9.x
env:
  global:
    - GOOGLE_APPLICATION_CREDENTIALS=client-secret.json
    - PROJECT_NAME=kubernetes-example-199908
    - CLUSTER_NAME=cluster-1
    - CLOUDSDK_COMPUTE_ZONE=us-central1-a
    - DOCKER_IMAGE_NAME=hello-app
    - KUBE_DEPLOYMENT_NAME=hello-app
    - KUBE_DEPLOYMENT_CONTAINER_NAME=hello-app-container
#cache:
# directories:
#  - "$HOME/google-cloud-sdk/"
before_install:
- openssl aes-256-cbc -K $encrypted_bd75f0e62987_key -iv $encrypted_bd75f0e62987_iv
  -in client-secret.json.enc -out ${GOOGLE_APPLICATION_CREDENTIALS} -d
- curl -LO "https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl"
- mkdir -p .bin; mv ./kubectl .bin/kubectl && chmod +x .bin/kubectl
- export PATH="$TRAVIS_BUILD_DIR/.bin:$PATH"
- gcloud auth activate-service-account --key-file ${GOOGLE_APPLICATION_CREDENTIALS}
- gcloud container clusters get-credentials cluster-1 --zone us-central1-a --project kubernetes-example-199908
install:
- go get -v .
script:
- go test -v ./...
services:
- docker
before_deploy:
  - VERSION=$(git rev-parse --short master)
  - go build -ldflags "-X main.version=${VERSION}" -o hello-world .
  - docker build -t gcr.io/${PROJECT_NAME}/${DOCKER_IMAGE_NAME}:${VERSION} .
  - gcloud --quiet config set project ${PROJECT_NAME}
  - gcloud --quiet config set container/cluster ${CLUSTER_NAME}
  - gcloud --quiet config set compute/zone ${CLOUDSDK_COMPUTE_ZONE}
  - gcloud --quiet container clusters get-credentials ${CLUSTER_NAME}
  - gcloud docker -- push gcr.io/${PROJECT_NAME}/${DOCKER_IMAGE_NAME}:${VERSION}
  #- if [ ! -d "$HOME/google-cloud-sdk/bin" ]; then rm -rf $HOME/google-cloud-sdk; export CLOUDSDK_CORE_DISABLE_PROMPTS=1; curl https://sdk.cloud.google.com | bash; fi
  # - source /home/travis/google-cloud-sdk/path.bash.inc
deploy:
  provider: script
  script: bash ./.deployment/travis/deploy
  on:
    branch: master
