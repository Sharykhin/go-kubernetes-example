apiVersion: v1
kind: Service
metadata:
  name: hello-app-service
  namespace: dev
spec:
  ports:
  - port: 80
    targetPort: 8080
  selector:
    name: hello-app
  type: LoadBalancer
---
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: hello-app
  namespace: dev
  labels:
    app: hello-app
spec:
  replicas: 1
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      name: hello-app
  template:
    metadata:
      labels:
        name: hello-app
    spec:
      containers:
      - name: hello-app-golang
        image: gcr.io/kubernetes-example-199908/hello-app:${VERSION}
        env:
        - name: HTTP_ADDRESS
          value: ":8080"
        - name: APP_ENV
          value: "dev"
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: cloudsql-db-credentials
              key: username
        - name: DB_PASS
          valueFrom:
            secretKeyRef:
              name: cloudsql-db-credentials
              key: password
        - name: DB_HOST
          value: localhost
        livenessProbe:
          httpGet:
            path: /ping
            port: 8080
          initialDelaySeconds: 90
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /ping
            port: 8080
          initialDelaySeconds: 90
          periodSeconds: 10
      - name: cloudsql-proxy
        image: gcr.io/cloudsql-docker/gce-proxy:1.11
        command: ["/cloud_sql_proxy",
                  "-instances=kubernetes-example-199908:us-central1:sql-example=tcp:3306",
                  "-credential_file=/secrets/cloudsql/credentials.json"]
        volumeMounts:
          - name: cloudsql-instance-credentials
            mountPath: /secrets/cloudsql
            readOnly: true
      volumes:
      - name: cloudsql-instance-credentials
        secret:
          secretName: cloudsql-instance-credentials